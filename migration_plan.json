{
  "projectStructure": {
    "root": "api_service",
    "folders": {
      "api": {},
      "data": {}
    },
    "files": {
      "main.py": "Main entry point",
      "api/get_handler.py": "GET endpoint handler",
      "api/post_handler.py": "POST endpoint handler",
      "api/put_handler.py": "PUT endpoint handler",
      "api/delete_handler.py": "DELETE endpoint handler",
      "data/store.py": "Data storage module"
    }
  },
  "dependencies": [
    "flask==2.0.1",
    "python-dotenv==0.19.0",
    "werkzeug==2.0.1",
    "jsonschema==3.2.0"
  ],
  "codeConversion": {
    "temp_extract/Php/index.php": {
      "target": "api_service/main.py",
      "code": "from flask import Flask, request, jsonify\nfrom api.get_handler import handle_get\nfrom api.post_handler import handle_post\nfrom api.put_handler import handle_put\nfrom api.delete_handler import handle_delete\n\napp = Flask(__name__)\n\n@app.route('/', methods=['GET', 'POST', 'PUT', 'DELETE'])\ndef handle_request():\n    if request.method == 'GET':\n        return handle_get()\n    elif request.method == 'POST':\n        return handle_post()\n    elif request.method == 'PUT':\n        return handle_put()\n    elif request.method == 'DELETE':\n        return handle_delete()\n    else:\n        return jsonify({'message': 'Method not allowed'}), 405\n\nif __name__ == '__main__':\n    app.run(debug=True)"
    },
    "temp_extract/Php/api/get.php": {
      "target": "api_service/api/get_handler.py",
      "code": "from flask import request, jsonify\nfrom data.store import data\n\ndef handle_get():\n    item_id = request.args.get('id')\n    if item_id:\n        item_id = int(item_id)\n        if item_id in data:\n            return jsonify(data[item_id])\n        return jsonify({'message': 'Item not found'}), 404\n    return jsonify(list(data.values()))"
    },
    "temp_extract/Php/api/post.php": {
      "target": "api_service/api/post_handler.py",
      "code": "from flask import request, jsonify\nfrom data.store import data\n\ndef handle_post():\n    input_data = request.get_json()\n    new_id = len(data) + 1\n    data[new_id] = {\n        'id': new_id,\n        'name': input_data['name'],\n        'description': input_data['description']\n    }\n    return jsonify(data[new_id])"
    },
    "temp_extract/Php/api/put.php": {
      "target": "api_service/api/put_handler.py",
      "code": "from flask import request, jsonify\nfrom data.store import data\n\ndef handle_put():\n    input_data = request.get_json()\n    item_id = request.args.get('id')\n    \n    if not item_id:\n        return jsonify({'message': 'ID is required'}), 400\n        \n    item_id = int(item_id)\n    if item_id not in data:\n        return jsonify({'message': 'Item not found'}), 404\n        \n    data[item_id]['name'] = input_data.get('name', data[item_id]['name'])\n    data[item_id]['description'] = input_data.get('description', data[item_id]['description'])\n    \n    return jsonify(data[item_id])"
    },
    "temp_extract/Php/api/delete.php": {
      "target": "api_service/api/delete_handler.py",
      "code": "from flask import request, jsonify\nfrom data.store import data\n\ndef handle_delete():\n    item_id = request.args.get('id')\n    \n    if not item_id:\n        return jsonify({'message': 'ID is required'}), 400\n        \n    item_id = int(item_id)\n    if item_id not in data:\n        return jsonify({'message': 'Item not found'}), 404\n        \n    del data[item_id]\n    return jsonify({'message': 'Item deleted'})"
    },
    "temp_extract/Php/data/data.php": {
      "target": "api_service/data/store.py",
      "code": "data = {\n    1: {'id': 1, 'name': 'Item 1', 'description': 'Description of Item 1'},\n    2: {'id': 2, 'name': 'Item 2', 'description': 'Description of Item 2'}\n}"
    }
  }
}